<Page
    x:Class="WhatsApp.Pages.VideoPlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    
    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:WhatsApp"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="PortraitOrLandscape" Orientation="Portrait"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="False">

    <Page.Resources>
        <local:Localizable x:Key="Localizable"/>

        <!-- We need a custom style for the Slider in order to override its thumb
             Anything that has been overwritten has a comment - otherwise it's the default value -->
        <Style x:Key="ProgressSliderStyle" TargetType="Slider">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Maximum" Value="10"/>
            <Setter Property="Minimum" Value="0"/>
            <Setter Property="Value" Value="0"/>
            <!-- The background should be invisible to show the buffering progress bar underneath -->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneAccentBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalTrack"/>
                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalTrack"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalFill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalFill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="HorizontalTemplate" Margin="{StaticResource PhoneHorizontalMargin}">
                                <Rectangle x:Name="HorizontalTrack" Fill="{TemplateBinding Background}" Height="12" IsHitTestVisible="False" Margin="0,22,0,50"/>
                                <Rectangle x:Name="HorizontalFill" Fill="{TemplateBinding Foreground}" Height="12" IsHitTestVisible="False" Margin="0,22,0,50">
                                    <Rectangle.Clip>
                                        <RectangleGeometry Rect="0, 0, 6, 12"/>
                                    </Rectangle.Clip>
                                </Rectangle>
                                <!-- This is the thumb -->
                                <Rectangle x:Name="HorizontalCenterElement" Fill="White" HorizontalAlignment="Left" Height="24" Margin="0,16,0,44" Width="12">
                                    <Rectangle.RenderTransform>
                                        <TranslateTransform/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                            <Grid x:Name="VerticalTemplate" Margin="{StaticResource PhoneVerticalMargin}">
                                <Rectangle x:Name="VerticalTrack" Fill="{TemplateBinding Background}" IsHitTestVisible="False" Margin="18,0,18,0" Width="12"/>
                                <Rectangle x:Name="VerticalFill" Fill="{TemplateBinding Foreground}" IsHitTestVisible="False" Margin="18,0,18,0" Width="12">
                                    <Rectangle.Clip>
                                        <RectangleGeometry Rect="0, 0, 12, 6"/>
                                    </Rectangle.Clip>
                                </Rectangle>
                                <Rectangle x:Name="VerticalCenterElement" Fill="{StaticResource PhoneForegroundBrush}" Height="12" Margin="12,0,12,0" VerticalAlignment="Top" Width="24">
                                    <Rectangle.RenderTransform>
                                        <TranslateTransform/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <!--LayoutRoot is the root grid where all page content is placed-->
    <Grid x:Name="LayoutRoot" SizeChanged="SizeChangedEvent">
        <Canvas x:Name="videoCanvas" Background="Black">
            <!-- The buffering/loading/downloading overlay -->
            <Grid x:Name="bufferingOverlay"
                  Canvas.ZIndex="10"
                  Height="{Binding ActualHeight, ElementName=videoCanvas}"
                  Width="{Binding ActualWidth, ElementName=videoCanvas}">
                <Grid.Background>
                    <SolidColorBrush x:Name="bufferingOverlayBackground" Color="Black" Opacity="0.8"/>
                </Grid.Background>
                <ProgressBar x:Name="bufferingBar" IsIndeterminate="True"></ProgressBar>
            </Grid>
            <!-- The controls on top of the video -->
            <Grid x:Name="controlBar" Canvas.ZIndex="20"
                  Height="200" Width="{Binding ActualWidth, ElementName=videoCanvas}">
                <Grid.Background>
                    <SolidColorBrush x:Name="controlBarBackground" Color="Black"/>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!-- The slider used to track video progress and for seeking -->
                <Slider x:Name="progressSlider" IsEnabled="False" Style="{StaticResource ProgressSliderStyle}"
                        Grid.Row="0" Grid.ColumnSpan="3" Canvas.ZIndex="22"/>
                <!-- Displays how much of the video has been buffered beneath the slider -->
                <!-- DarkGray is lighter than Gray but darker than LightGray-->
                <ProgressBar x:Name="bufferingProgressBar" IsEnabled="False"
                             Foreground="DarkGray" Background="Gray"
                             Grid.Row="0" Grid.ColumnSpan="3" Canvas.ZIndex="21">
                    <!-- Place the progress bar under the slider -->
                    <ProgressBar.RenderTransform>
                        <CompositeTransform ScaleY="3" CenterY="57"/>
                    </ProgressBar.RenderTransform>
                </ProgressBar>
                <Button x:Name="jumpBackButton" BorderThickness="0"
                        FontFamily="Segoe UI Symbol" Content="&#xE100;" Foreground="White"
                        Grid.Row="1" Grid.Column="0"/>
                <Button x:Name="playButton" BorderThickness="0"
                        FontFamily="Segoe UI Symbol" Content="&#xE103;" Foreground="White"
                        Grid.Row="1" Grid.Column="1"/>
                <Button x:Name="jumpForwardButton" BorderThickness="0"
                        FontFamily="Segoe UI Symbol" Content="&#xE101;" Foreground="White"
                        Grid.Row="1" Grid.Column="2"/>
            </Grid>
            <!-- The timestamp labels below the scrubber -->
            <Border x:Name="timestampsRow" Padding="12" Canvas.ZIndex="30"
                    Height="48" Width="{Binding ActualWidth, ElementName=videoCanvas}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="timeWatchedText" Grid.Column="0" Text="0:00" Foreground="White"/>
                    <TextBlock x:Name="timeLeftText" Grid.Column="1" TextAlignment="Right" Text="0:00" Foreground="White"/>
                </Grid>
            </Border>
            <!-- The thumbnail shown while the video is loaded -->
            <Image x:Name="thumbnailImage" Canvas.ZIndex="1"
                   Width="{Binding ActualWidth, ElementName=videoCanvas}"
                   Height="{Binding ActualHeight, ElementName=videoCanvas}"
                   Stretch="Uniform"
                   CacheMode="BitmapCache"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"/>
            <!-- Where the video is drawn -->
            <MediaElement x:Name="mediaPlayer" AutoPlay="False" Canvas.ZIndex="0" CurrentStateChanged="Media_State_Changed"/>
        </Canvas>
    </Grid>

</Page>