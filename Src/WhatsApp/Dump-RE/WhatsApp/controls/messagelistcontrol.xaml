<UserControl x:Class="WhatsApp.MessageListControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:local="clr-namespace:WhatsApp"
    xmlns:controls="clr-namespace:WhatsApp.Controls"
    xmlns:shim="clr-namespace:WhatsApp.CompatibilityShims"
    xmlns:primitives="clr-namespace:Microsoft.Phone.Controls.Primitives"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    d:DesignHeight="480" d:DesignWidth="480">

    <UserControl.Resources>
        <Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
            <Setter Property="Padding" Value="10,5,10,6"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Background="{TemplateBinding Background}" Margin="{StaticResource PhoneTouchTargetOverhang}" >
                                <ContentControl x:Name="ContentContainer" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PhoneRadioButtonCheckBoxBase" TargetType="ToggleButton" BasedOn="{StaticResource PhoneButtonBase}">
            <Setter Property="Background" Value="{StaticResource PhoneRadioCheckBoxBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneRadioCheckBoxBorderBrush}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
        </Style>

        <Style x:Key="SelectableMessageCheckBoxStyle" TargetType="CheckBox"
               BasedOn="{StaticResource PhoneRadioButtonCheckBoxBase}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Background="Transparent" HorizontalAlignment="Left">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="{StaticResource PhoneTouchTargetLargeOverhang}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" VerticalAlignment="Top">
                                    <Border x:Name="CheckBackground" BorderBrush="{TemplateBinding Foreground}" BorderThickness="{StaticResource PhoneBorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Left" Height="32" IsHitTestVisible="False" VerticalAlignment="Center" Width="32"/>
                                    <Rectangle x:Name="IndeterminateMark" Fill="{StaticResource PhoneRadioCheckBoxCheckBrush}" HorizontalAlignment="Center" Height="16" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="16"/>
                                    <Path x:Name="CheckMark" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z"
                                          FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="21"
                                          IsHitTestVisible="False" Stretch="Fill" StrokeThickness="3"
                                          StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center"
                                          Width="23" Fill="{TemplateBinding Foreground}"/>
                                </Grid>
                                <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Grid.Column="1"
                                                Foreground="{TemplateBinding Foreground}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="12,0,0,0" Padding="{TemplateBinding Padding}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MultiSelectableMessageListStyle" TargetType="controls:LongListMultiSelector">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:LongListMultiSelector">
                        <shim:LongListSelector x:Name="InnerSelector"
                                               GroupFooterTemplate="{TemplateBinding GroupFooterTemplate}"
                                               GroupHeaderTemplate="{TemplateBinding GroupHeaderTemplate}"
                                               ItemsSource="{TemplateBinding ItemsSource}"
                                               ListFooter="{TemplateBinding ListFooter}"
                                               ListFooterTemplate="{TemplateBinding ListFooterTemplate}"
                                               ListHeader="{TemplateBinding ListHeader}"
                                               ListHeaderTemplate="{TemplateBinding ListHeaderTemplate}"
                                               IsGroupingEnabled="False"
                                               RenderTransformOrigin="0.5,0.5">
                            <shim:LongListSelector.RenderTransform>
                                <CompositeTransform ScaleY="-1"/>
                            </shim:LongListSelector.RenderTransform>
                            <shim:LongListSelector.ItemTemplate>
                                <DataTemplate>
                                    <local:SelectableMessageListItem x:Name="LLSItem"
                                                                     Margin="0"
                                                                     HorizontalContentAlignment="Stretch"
                                                                     VerticalAlignment="Stretch"
                                                                     Content="{Binding}">
                                        <local:SelectableMessageListItem.Template>
                                            <ControlTemplate TargetType="local:SelectableMessageListItem">
                                                <Grid x:Name="LayoutRoot"
                                                      MinHeight="40"
                                                      RenderTransformOrigin="0.5,0.5">
                                                    <Grid.RenderTransform>
                                                        <CompositeTransform ScaleY="-1"/>
                                                    </Grid.RenderTransform>

                                                    <Grid.Resources>
                                                        <ExponentialEase EasingMode="EaseIn" Exponent="8" x:Key="ExponentialEaseIn"/>
                                                        <QuadraticEase EasingMode="EaseOut" x:Key="QuadraticEaseOut"/>
                                                    </Grid.Resources>

                                                    <!--
                                                        NB: The order of things in the following xaml for VisualStateGroups is very sensitive.
                                                        The method AdjustVisualStateGroups relies on it, please sync both places when making changes.
                                                    -->

                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="SelectionEnabledStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition x:Name="ClosedToExposed" 
                                                                                  From="Closed" To="Exposed"
                                                                                  GeneratedDuration="0:0:0.30">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                                                       Storyboard.TargetName="OuterHintPanel">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualTransition>
                                                                <VisualTransition x:Name="ExposedToClosed" 
                                                                                  From="Exposed" To="Closed"
                                                                                  GeneratedDuration="0:0:0.30">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                                                       Storyboard.TargetName="OuterHintPanel">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualTransition>
                                                                <VisualTransition x:Name="ExposedToOpened"
                                                                                  From="Exposed" To="Opened"
                                                                                  GeneratedDuration="0:0:0.30">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                                                       Storyboard.TargetName="SelectBox">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                                                       Storyboard.TargetName="Presenter">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                                                       Storyboard.TargetName="OuterHintPanel">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                                                       Storyboard.TargetName="SelectBox">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                                                       Storyboard.TargetName="OuterHintPanel">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                                                       Storyboard.TargetName="InnerHintPanel">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualTransition>
                                                                <VisualTransition x:Name="ClosedToOpened"
                                                                                  From="Closed" To="Opened"
                                                                                  GeneratedDuration="0:0:0.15">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                                                       Storyboard.TargetName="SelectBox">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                                                       Storyboard.TargetName="Presenter">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                                                       Storyboard.TargetName="SelectBox">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                                                       Storyboard.TargetName="OuterHintPanel">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                                                       Storyboard.TargetName="InnerHintPanel">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualTransition>
                                                                <VisualTransition x:Name="OpenedToClosed"
                                                                                  From="Opened" To="Closed"
                                                                                  GeneratedDuration="0:0:0.15">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                                                       Storyboard.TargetName="SelectBox">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                                                       Storyboard.TargetName="Presenter">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                                                       Storyboard.TargetName="SelectBox">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualTransition>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualStateGroup.States>
                                                                <VisualState x:Name="Closed"/>
                                                                <VisualState x:Name="Exposed">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                                         Storyboard.TargetName="OuterHintPanel"
                                                                                         Duration="0" To="1.0"/>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Opened">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                                         Storyboard.TargetName="SelectBox"
                                                                                         Duration="0" To="0"/>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                                         Storyboard.TargetName="Presenter"
                                                                                         Duration="0" To="86"/>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                                                       Storyboard.TargetName="SelectBox">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                                                       Storyboard.TargetName="OuterCover">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                                         Storyboard.TargetName="OuterHintPanel"
                                                                                         Duration="0" To="0.0"/>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                                                       Storyboard.TargetName="OuterHintPanel">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                                                       Storyboard.TargetName="InnerHintPanel">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup.States>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>

                                                    <Grid HorizontalAlignment="Stretch" CacheMode="BitmapCache">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid Grid.Column="0" HorizontalAlignment="Stretch"
                                                              primitives:ClipToBounds.IsEnabled="True">
                                                            <ContentPresenter x:Name="Presenter" Margin="0,0,24,0">
                                                                <ContentPresenter.RenderTransform>
                                                                    <CompositeTransform TranslateX="24"/>
                                                                </ContentPresenter.RenderTransform>
                                                            </ContentPresenter>
                                                        </Grid>
                                                        <Rectangle x:Name="InnerHintPanel" Grid.Column="0" Width="24"
                                                                   Height="{TemplateBinding HintPanelHeight}"
                                                                   HorizontalAlignment="Left"
                                                                   Fill="Transparent"
                                                                   StrokeThickness="0">
                                                            <Rectangle.RenderTransform>
                                                                <CompositeTransform TranslateX="24"/>
                                                            </Rectangle.RenderTransform>
                                                        </Rectangle>
                                                        <ContentControl x:Name="InfoPresenter" Grid.Column="1" 
                                                                        VerticalAlignment="Top"
                                                                        Content="{TemplateBinding ContentInfo}"
                                                                        ContentTemplate="{TemplateBinding ContentInfoTemplate}"/>
                                                    </Grid>
                                                    <Rectangle x:Name="OuterHintPanel"
                                                               Width="24"
                                                               HorizontalAlignment="Left"
                                                               CacheMode="BitmapCache"
                                                               Height="{TemplateBinding HintPanelHeight}"
                                                               Fill="{TemplateBinding Background}"
                                                               StrokeThickness="0"
                                                               Opacity="0.0"/>
                                                    <Grid x:Name="OuterCover"
                                                          IsHitTestVisible="True"
                                                          CacheMode="BitmapCache"
                                                          Visibility="Collapsed"
                                                          Background="Transparent"/>
                                                    <Canvas HorizontalAlignment="Left" CacheMode="BitmapCache">
                                                        <!--Rectangle Width="12" Height="12" Fill="Red"/-->
                                                        <CheckBox x:Name="SelectBox" VerticalAlignment="Top" Margin="12,-20,5,0"
                                                                  Visibility="Collapsed" CacheMode="BitmapCache"
                                                                  Style="{StaticResource SelectableMessageCheckBoxStyle}"
                                                                  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}">
                                                            <CheckBox.RenderTransform>
                                                                <CompositeTransform x:Name="SelectBoxTransform" TranslateX="-58"/>
                                                            </CheckBox.RenderTransform>
                                                        </CheckBox>
                                                    </Canvas>
                                                </Grid>
                                            </ControlTemplate>
                                        </local:SelectableMessageListItem.Template>
                                    </local:SelectableMessageListItem>
                                </DataTemplate>
                            </shim:LongListSelector.ItemTemplate>
                        </shim:LongListSelector>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="MessageListItemTemplateMLLS">
            <local:MessageBubbleContainer ViewModel="{Binding}"
                                          Margin="0"/>
        </DataTemplate>

        <DataTemplate x:Key="MessageListItemTemplateLLS">
            <local:MessageBubbleContainer ViewModel="{Binding}"
                                          Margin="0"
                                          RenderTransformOrigin="0.5,0.5"
                                          IsSelectable="False">
                <local:MessageBubbleContainer.RenderTransform>
                    <CompositeTransform ScaleY="{Binding TransformScaleY}"/>
                </local:MessageBubbleContainer.RenderTransform>
            </local:MessageBubbleContainer>
        </DataTemplate>

        <Storyboard x:Name="OverlayDateStoryboard">
            <DoubleAnimation x:Name="OverlayDateAnimation"
                             Storyboard.TargetName="DateDividerOverlayXForm"
                             Storyboard.TargetProperty="(CompositeTransform.TranslateY)"
                             Duration="00:00:00.4">
                <DoubleAnimation.EasingFunction>
                    <PowerEase EasingMode="EaseIn" Power="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </UserControl.Resources>

    <Grid x:Name="ContentPanel">
        <local:MessageBubbleContainer x:Name="DateDividerOverlayContainer"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Center"
                                      IsSelectable="False"
                                      IsHitTestVisible="False"
                                      Opacity="0"
                                      CacheMode="BitmapCache">
            <local:MessageBubbleContainer.RenderTransform>
                <CompositeTransform x:Name="DateDividerOverlayXForm"/>
            </local:MessageBubbleContainer.RenderTransform>
        </local:MessageBubbleContainer>
        <Grid x:Name="ScrollButton"
              CacheMode="BitmapCache"
              Width="68" 
              Height="52"
              VerticalAlignment="Bottom"
              HorizontalAlignment="Right"
              Margin="0,0,0,36"
              Opacity="0">
            <Rectangle x:Name="ScrollButtonBackground"/>
            <Image x:Name="ScrollButtonIcon" 
                   Source="/Images/assets/dark/double-chevron.png" 
                   Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="22" Height="22"/>
        </Grid>
    </Grid>
</UserControl>